#::= BTC interpreter in Thue
#::= written by Keymaker
#::= first feed the program data and then the initial data
#::= give the input by using characters '0' and '1'
b::=~Input the program data.
dd::=:::
a_c::=*e*
e::=~Error, no program data.
0c::=0fh*g*hi
1c::=1fh*g*hi
g::=~Input the initial data.
hh::=:::
fi::=*j*
j::=~Execution completed, no more data.
0i::=A0k
1i::=A1k
0A::=A0
1A::=A1
fA::=Af
_A::=A_
aA::=aBl
l::=~Program: 
B0::=0B6
B1::=1B7
B_0::=_0B8
B_1::=_1B9
6::=~0
7::=~1
8::=~[0]
9::=~[1]
Bf::=fBm**m
mm::=~Memory: 
Bk::=**Ck
0C::=C0
1C::=C1
fC::=Cf
_C0::=_0D
D0::=0D
D1::=1D
Df0::=Ef
Df1::=Ef
0E::=E0
1E::=E1
_E::=_G
_C10::=1_0M
_C11::=1_1N
_C1f::=F1f
0F::=F0
1F::=F1
aF0::=a_0M
aF1::=a_1N
M0::=0M
M1::=1M
N0::=0N
N1::=1N
Mf0::=Gf0
Nf0::=Gf0
Mf1::=f1M
Nf1::=f1N
Mk::=G0k
Nk::=G1k
0G::=G0
1G::=G1
fG::=Gf
_G0::=0_F
_G1::=1_F
_Gf::=Hf
_F0::=_0J
_F1::=_1J
_Ff::=Hf
0H::=H0
1H::=H1
aH::=a_J
J0::=0J
J1::=1J
Jf::=fJ
Jk::=i
**::=~
::=
a_d*b*dc
